{"name":"Presentr.js","tagline":"A light weight HTML presentation framework","body":"## Dist/Build\r\nYou should use files under `dist/` folder for productions, files under `build/` folder is only for developement purpose.\r\n\r\n### Build\r\nBe sure you have install the `gulp-cli` at first\r\n\r\n```shell\r\n$ npm install --global gulp\r\n```\r\n\r\ninstall all dependencies:\r\n\r\n```shell\r\n$ npm install\r\n```\r\n\r\nbuild the developement version of Presentr.js\r\n\r\n```shell\r\n$ gulp build\r\n```\r\n\r\nThe result is available in `build/` folder.\r\n\r\n### Release\r\nAfter you have made build:\r\n\r\n```shell\r\n$ gulp dist\r\n```\r\n\r\nDistributalble version will available in `dist/` folder.\r\n\r\n## Run the demo\r\nYou can run the demo if you have build the files\r\n\r\n```\r\n$ gulp server\r\n```\r\n\r\n## Usage\r\n\r\nThe HTML structure should be:\r\n\r\n```html\r\n<div id=\"presentr\">\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n</div>\r\n```\r\n\r\nUse Presentr like this:\r\n\r\n```javascript\r\nvar presentr = new Presentr(document.querySelector('#presentr'));\r\n```\r\n\r\n## Config Options\r\nThe second parameter of the Presentr function is an object for configs:\r\n\r\n  - **width** Number *(default: `offsetWidth` of container element)* width of the presentation\r\n  - **height** Number *(default: `offsetHeight` of container element)* height of the presentation\r\n  - **startIndex** Number *(default: 0)* the index of the slide show at start\r\n  - **cycle** Boolean *(default: false)* whether to cycle the slides\r\n  - **speed** Number *(default: 300)* duration of the change animation\r\n  - **lock** String/Boolean *(default: false)* prevent the guesture on slides, `'left'` will prevent left guesture, `'right'` will prevent right guesture, `true` and `'both'` will prevent both direction.\r\n  - **timingFunction** String *(default: 'ease')* same as `transition-timing-function`\r\n  - **effect** String *(default: 'slide')* animation effects, `'none'` will slide with no animation, `'fade'` will change `opacity` value in animation, `'slide'` will change offset value in animation\r\n  - **activeClassName** String *(default: 'presentr-active')* class name of the active slide\r\n  - **navigation** Object config of the navigation\r\n    - **element** Array/Nodelist *(default: [ ])* HTML DOM collection\r\n    - **eventType** String *(default: 'click')* name of the event bind on the navigation items\r\n    - **activeClassName** String *(default: 'presentr-nav-active')* class name of the active navigation item\r\n  - **enableHash** Boolean *(default: true)* whether change the `location.hash` when change slides\r\n  - **actionArea** HTMLElement *(default: document)* guesture area\r\n  - **onChangeStart** Function run before animation start\r\n  - **onChangeEnd** Function run after animation end\r\n\r\n### Example\r\n\r\n```javascript\r\nvar presentr = new Presentr(document.querySelector('#presentr'), {\r\n  width: 1000,\r\n  height: 800,\r\n  startIndex: 0,\r\n  cycle: true,\r\n  speed: 400,\r\n  lock: false,\r\n  timingFunction: 'ease',\r\n  effect: 'fade',\r\n  activeClassName: 'active',\r\n  navigation: {\r\n    elements: document.querySelectorAll('#navigation>li'),\r\n    eventType: 'click',\r\n    activeClassName: 'nav-active'\r\n  },\r\n  enableHash: true,\r\n  actionArea: document,\r\n  onChangeStart: function(targetIndex, prevIndex){\r\n    console.log(targetIndex, prevIndex);\r\n  },\r\n  onChangeEnd: function(index){\r\n    console.log(index);\r\n  }\r\n});\r\n```\r\n\r\n## API\r\n  - `slides` an array contains all of the slide elements\r\n  - `options` reference of the config object\r\n  - `show(index)` show one of the slide with no animation\r\n  - `prev(duration)` go to prev\r\n  - `next(duration)` go to next\r\n  - `gotoSlide(index, duration)` go to one of the slide with effects, `duration` is the duration of animation\r\n  - `getIndex()` return the index of active slide\r\n  - `lock(direction)` lock the guesture on slides, the `direction` value is same as **lock** in the config object\r\n  - `unLock(direction)` unlock the guesture prevention\r\n  - `fullScreen(zIndex)` set presentation size as the size of the viewport, `zIndex` will set the `z-index` property of container element\r\n  - `cancelFullScreen()` quit the full screen state\r\n  - `isFullScreen` return boolean value, indicate whether the presentation is on full screen state\r\n  - `destory()` recovery the DOM styles and destory the instance\r\n\r\n\r\n## Browser Support\r\nCompatible with most of the modern browsers (Chrome, Firefox, Opera, IE10+), include the moblie platforms.\r\n\r\n## License\r\nCopyright (c) 2015 Lin Chen. Licensed under [The MIT License (MIT)](https://opensource.org/licenses/MIT)","google":"UA-43859931-3","note":"Don't delete this file! It's used internally to help with page regeneration."}